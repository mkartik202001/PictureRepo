#BlueJ class context
comment0.target=Picture
comment0.text=\r\n\ A\ class\ that\ represents\ a\ picture.\ \ This\ class\ inherits\ from\r\n\ SimplePicture\ and\ allows\ the\ student\ to\ add\ functionality\ to\r\n\ the\ Picture\ class.\r\n\r\n\ Copyright\ Georgia\ Institute\ of\ Technology\ 2004-2005\r\n\ @author\ Barbara\ Ericson\ ericson@cc.gatech.edu\r\n
comment1.params=
comment1.target=Picture()
comment1.text=\r\n\ Constructor\ that\ takes\ no\ arguments\r\n
comment10.params=
comment10.target=void\ mirrorVertical()
comment10.text=\r\n\ A\ method\ that\ mirrors\ the\ image\ vertically\ \r\n
comment11.params=h\ w
comment11.target=void\ recursiveCall(int,\ int)
comment11.text=\r\n\ Method\ that\ recursively\ reduces\ the\ height\ and\ width\ of\ the\ image\ by\ a\ cetain\ \r\n\ interger\ value\ that\ is\ specified\ in\ the\ runner\ main\ class\r\n
comment12.params=
comment12.target=void\ funColor()
comment12.text=\r\n\ Nothing\ specific\ alteration\ with\ the\ RGB\ values\ of\ the\ image,\ but\ make\ them\ \r\n\ look\ burned\ and\ dark\ as\ the\ RGB\ values\ in\ the\ image\ are\ divided\ with\ sertain\ \r\n\ constants.\ \r\n
comment13.params=
comment13.target=void\ flip()
comment13.text=\r\n\ Method\ that\ flip\ the\ parent\ image.\ \r\n
comment14.params=
comment14.target=void\ overlapJoker()
comment14.text=\r\n\ An\ image\ that\ overlaps\ the\ parent\ image.\ \r\n
comment15.params=
comment15.target=void\ mirrorHorizontalBottomToTop()
comment15.text=\r\n\ Method\ that\ mirrors\ the\ image\ recursively\ by\ copying\ the\ bottom\ pixels\ \r\n\ to\ the\ top\r\n
comment2.params=fileName
comment2.target=Picture(java.lang.String)
comment2.text=\r\n\ Constructor\ that\ takes\ a\ file\ name\ and\ creates\ the\ picture\r\n\ @param\ fileName\ the\ name\ of\ the\ file\ to\ create\ the\ picture\ from\r\n
comment3.params=width\ height
comment3.target=Picture(int,\ int)
comment3.text=\r\n\ Constructor\ that\ takes\ the\ width\ and\ height\r\n\ @param\ width\ the\ width\ of\ the\ desired\ picture\r\n\ @param\ height\ the\ height\ of\ the\ desired\ picture\r\n
comment4.params=copyPicture
comment4.target=Picture(Picture)
comment4.text=\r\n\ Constructor\ that\ takes\ a\ picture\ and\ creates\ a\r\n\ copy\ of\ that\ picture\r\n
comment5.params=image
comment5.target=Picture(java.awt.image.BufferedImage)
comment5.text=\r\n\ Constructor\ that\ takes\ a\ buffered\ image\r\n\ @param\ image\ the\ buffered\ image\ to\ use\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ Method\ to\ return\ a\ string\ with\ information\ about\ this\ picture.\r\n\ @return\ a\ string\ with\ information\ about\ the\ picture\ such\ as\ fileName,\r\n\ height\ and\ width.\r\n
comment7.params=
comment7.target=void\ gray()
comment7.text=\r\n\ Method\ for\ turning\ the\ image\ in\ gray\ \r\n
comment8.params=
comment8.target=void\ copyKatie()
comment9.params=args
comment9.target=void\ main(java.lang.String[])
numComments=16
